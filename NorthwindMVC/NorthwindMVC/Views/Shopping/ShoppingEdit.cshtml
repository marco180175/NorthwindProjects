@model NorthwindModel.Models.ShoppingCart
@using NorthwindBusiness.Src;
@using NorthwindModel.Models;

@{
    ViewBag.Title = "ShoppingEdit";
}

<h2>ShoppingEdit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>ShoppingCart</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ShoppingCartID)

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CustomerID, (IEnumerable<SelectListItem>)ViewBag.Customers, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PurchaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.PurchaseDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
            @Html.ValidationMessageFor(model => model.PurchaseDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            <span id="text-counter">0/100</span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "ShoppingIndex")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script type="text/javascript">
        //conta caracteres no evento OnKeyUp do TextArea
        $('#Description').keyup(function () {
            updateTextCounter($(this).val());
        });
        //conta caracteres no evento OnReady do document
        $(document).ready(function () {
            updateTextCounter($('#Description').val());
        });
        //conta caracteres
        function updateTextCounter(text) {            
            var maxlen = 100;
            var count = text.length;
            for (var i = 0; i < text.length; i++) {
                if (text[i] == '\n')
                    count++;
            }
            $('#text-counter').html(count + '/' + maxlen);
        }
    </script>
}
