@model NorthwindModel.Models.ShoppingCartItem
@using NorthwindBusiness.Src;
@using NorthwindModel.Models;
@{
    ViewBag.Title = "ShoppingItemCreate";
    Layout = "~/Views/Shared/_LayoutDefault.cshtml";//necessario para funcionamento dos scripts
}

<h2>ShoppingItemCreate. ShoppingCartID = @ViewBag.ShoppingCartID</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ShoppingCartItem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table id="table1" border="1" style="width:100%">
            <tr>
                <td style="width:50%" valign="top">
                    <table id="tableLeft" border="1" style="width:100%">
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ddlCategoryID", (IEnumerable<SelectListItem>)ViewBag.Categories, new { required = "required", @onchange = "ddlCategoryID_Change();" })
                                        <span id="teste">0</span>

                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">

                                    @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label col-md-2", value = ViewBag.ProductID })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.ProductID, (IEnumerable<SelectListItem>)ViewBag.Products, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td align="center">
                                <div class="form-group">
                                    @*<div class="col-md-offset-2 col-md-10">*@
                                    <input id="button1" type="submit" value="Create" class="btn btn-default" />
                                    @*</div>*@
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>
                <td valign="top">
                    @{
                        Html.RenderPartial("ProductListPartial");
                    }
                    @*<div style="overflow: auto; height:400px;">
            <table id="tableRight" border="1" class="table table-bordered table-condensed table-hover table-striped">
                <thead>
                    <tr style="height:25px;">
                        <th>ProductID</th>
                        <th>ProductName</th>
                        <th>UnitPrice</th>
                    </tr>
                </thead>
                <tbody id="tableRightBody" style="overflow: auto;  height: 200px;"></tbody>
            </table>
        </div>*@
                </td>
            </tr>
        </table>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ShoppingItemIndex", new { id = ViewBag.ShoppingCartID })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript">
        $(window).on("load", function () {
            ddlCategoryID_Change();
        });

        function ddlCategoryID_Change() {
            var value = $("#ddlCategoryID").val();

            $("#teste").html(value);
            getProductList(value);

            $.ajax({
                url: "/ShoppingItem/ShoppingItemSetProductIdJson",
                data: { id: value },
                type: "GET",
                dataType: "json",
                success: function (result) {
                    $('#ProductID').empty();
                    $.each(result, function (i, item) {
                        $("#ProductID").append('<option value="' + item.Value + '">' +
                            item.Text + '</option>');
                    });

                },
                error: function (error) {
                    alert('error =' + error);
                }
            });


        }

        function getProductList(value) {
            $(document).ready(function () {
                
                //Call EmpDetails jsonResult Method
                $.getJSON("/ShoppingItem/GetProductInfo/?id=" + value,
                    function (json) {
                        var tr;
                        //Append each row to html table
                        $('#tableRightBody').empty();
                        for (var i = 0; i < json.length; i++) {
                            tr = $('<tr/>');
                            tr.append("<td>" + json[i].ProductID + "</td>");
                            tr.append("<td>" + json[i].ProductName + "</td>");
                            tr.append("<td>" + json[i].UnitPrice + "</td>");
                            $('#tableRightBody').append(tr);
                        }
                    });
            });
        }

    </script>
}

